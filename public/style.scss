
body {
  --m: clamp(1rem, 3vw, 3rem);
  margin: var(--m);
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.4;
  
  min-height: 100vh;
  display: flex;
  // flex-direction: column;
  justify-content: center;

  &::after {
    content: '';
    flex-grow: 1;
  }
  
  > * {
    box-sizing: border-box;
  }

// }

// main {
  // display: grid;
  // min-height: calc(100svh - var(--m));
  // place-content: center;
}

svg rect {
  mix-blend-mode: multiply;
}

button {
  border: none;
  font-size: inherit;
  min-width: 2rem;
  min-height: 2rem;
  cursor: pointer;
}

footer {
  position: fixed;
  bottom: 1rem;
  left: 1rem;
  font-size: 80%;

  & > button {
    background-color: transparent;
  }
}

@property --spinAngle {
  /* An initial value for our custom property */
  initial-value: 0deg;
  /* Whether it inherits from parent set values or not */
  inherits: false;
  /* The type. Yes, the type. You thought TypeScript was cool */
  syntax: '<angle>';
}

.card {
  width: min(100%, 60ch);
  margin-inline: auto;
  text-wrap: balance;
  h1 {
    margin-top: 2rem;
  } 
  .desc {
    font-weight: normal;
  }
}
.uppercase {
  text-transform: uppercase;
}

.logo {
  --logo-width: min(100%, 60ch);
  --logo-art-angle: 193deg;
  --logo-art-shift-Y: 0px;
  --logo-art-shift-X: 0px;
  position: relative;
  width: var(--logo-width);
  margin: auto;
  mix-blend-mode: multiply;
  display: flex;
  
  & > * {
    position: relative;
    display: flex;
    align-items: flex-end;
    flex-basis: 70%;
    flex-shrink: 0;
  }
  .logo-art {
    transform-origin: bottom left;
    transform: translate(var(--logo-art-shift-X), var(--logo-art-shift-Y)) rotate(var(--logo-art-angle));
    z-index: -1;
    opacity: 1;
    flex-basis: 30%;
    flex-shrink: 1;
  }
  &.small {
    --logo-line-height: 4rem;
    --logo-art-angle: 180deg;
    filter: brightness(0.8);
    .logo-art {
      opacity: 0.8;
    }
  }
  &.large {
    --logo-art-angle: var(--spinAngle);
    animation: spin 1s infinite ease-in-out alternate;
    perspective: 1000px;
    // height: var(--logo-line-height);
    // aspect-ratio: 30 / 5;
    .logo-art {
      // left: unset;
      // right: 0%;
      transform: translate(var(--logo-art-shift-X), var(--logo-art-shift-Y)) rotate3D(1,0,0,var(--logo-art-angle));
    }
  }
  &.bw {
    filter: brightness(0.51) saturate(0);
    --logo-art-shift-Y: calc(var(--logo-line-height) * -1);
    --logo-art-angle: 90deg;
    left: calc(var(--logo-line-height) / -2);
  }
}

.impressum {
  font-size: 80%;
  position: fixed;
  z-index: 2000;
  width: min(100% - 2rem, 60ch);
  min-height: fit-content;
  max-height: calc(100svh - 4rem);
  overflow-y: auto;
  bottom: 3rem;
  left: 1rem;
  text-wrap: pretty;
  padding: 0 1.5rem 2rem;
  background-color: #EBEBEBF2;
  &.closed {
    display: none;
  }
  & header {
    position: sticky;
    top: 0;
    margin: 0 -1.5rem -1rem;
    display: flex;
    justify-content: flex-end;
  }
  & button.close {
    font-size: 200%;
    // position: absolute;
    right: 0;
  }
}

@keyframes swing {
  from {
    --spinAngle: 180deg;
  }
  to {
    --spinAngle: 198deg;
  }
}

@keyframes spin {
  from {
      --spinAngle: 20deg;
    }
  to {
    --spinAngle: -40deg;
  }
}